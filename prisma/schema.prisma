generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Scholar {
  id                    Int       @id @default(autoincrement())
  name                  String
  emailDomain          String?   @map("email_domain")
  affiliation          String?
  scholarId            String?   @unique @map("scholar_id")
  citedby              Int?
  citedby5y            Int?
  hindex               Int?
  hindex5y             Int?
  i10index             Int?
  i10index5y           Int?
  totalPub             Int?      @map("total_pub")
  interests            String?
  homepage             String?
  fullName             String?   @map("full_name")
  method               String?
  summaryTrainingStart DateTime? @map("summary_training_start")
  createdAt            DateTime  @default(now()) @map("created_at")
  googleScholarPubs    GoogleScholarPub[]
  pubmedPubs           PubmedPub[]

  @@map("scholars")
}

model GoogleScholarPub {
  id            Int      @id @default(autoincrement())
  title         String
  pubYear       Int?     @map("pub_year")
  citation      String?
  author        String?
  journal       String?
  publisher     String?
  abstract      String?  @db.Text
  authorPubId   String?  @map("author_pub_id")
  numCitations  Int?     @map("num_citations")
  citedbyUrl    String?  @map("citedby_url")
  citesId       String[] @map("cites_id")
  pubUrl        String?  @map("pub_url")
  scholarId     String   @map("scholar_id")
  pubIndex      Int?     @map("pub_index")
  createdAt     DateTime @default(now()) @map("created_at")
  scholar       Scholar  @relation(fields: [scholarId], references: [scholarId])

  @@map("google_scholar_pubs")
}

model PubmedPub {
  id              Int      @id @default(autoincrement())
  title           String
  authors         String[]
  affiliations    String[]
  pmid            String?
  doi             String?
  abstract        String?  @db.Text
  meshTerms       String[] @map("mesh_terms")
  grantSupport    Json?    @map("grant_support")
  publicationType String[] @map("publication_type")
  keywords        String[]
  scholarId       String   @map("scholar_id")
  pubIndex        Int?     @map("pub_index")
  createdAt       DateTime @default(now()) @map("created_at")
  scholar         Scholar  @relation(fields: [scholarId], references: [scholarId])

  @@map("pubmed_pubs")
}

model ScholarInformation {
  record_id       Int      @id
  name           String
  cohort         Int
  gender         String
  stage          String
  com_discipline String
  region         String
  productivity   Float
  z1             Float
  z2             Float

  @@map("scholars_info")
}

model TopicInformation {
  topic_id          String  @id @map("topic_id")
  topic_name        String
  topic_description String
  general_class14   Int
  topic_popularity  Float
  w1               Float
  w2               Float

  @@map("topic_info")
}